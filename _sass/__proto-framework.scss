
// Grid settings moved to proto-grid-settings



// *********************************************************
// BREAKPOINTS
// *********************************************************


// 24 pixel framework CONTENT
// super-wide:   960px + 120px nav / 24
// large:     780px > 960px / 24 (main content will always be 960px at most)
// medium:    540 > 779px / 18
// small:     0 > 539 / 12



// Core breakpoints (small, medium, large, largest) are defined in grid settings. 
// 	- Grid-only (setting a value for small will only affect small, a value for medium only affect medium, etc.)
// $small: new-breakpoint(min-width 0px 6);                           // 0 and above
// $small-only: new-breakpoint(max-width 480px 6);                       // 0 up to 480
// // $medium: new-breakpoint(min-width 481px 8);                        // 481 and above
// $medium-only: new-breakpoint(min-width 481px max-width 767px 8);      // 481 to 767
// $medium-max: new-breakpoint(max-width 767px 8);                       // 0 up to 767
// // $large: new-breakpoint(min-width 768px 12);                        // 768 and above
// $large-only: new-breakpoint(min-width 768 max-width 979 12);          // 768 to 979
// $large-max: new-breakpoint(max-width 979px 12);                       // 0 up to 979
// $largest: new-breakpoint(min-width 980px 12);                         // 980 and above (infinite)


// $break-tiny: new-breakpoint(min-width 0 18);                            // smallest possible; mobile size and up. Nav changes.
// $break-small-upto: new-breakpoint(max-width 479px 18); 
// $break-small: new-breakpoint(min-width 480px 24);                       // bigger than mobile. Nav shows

// when the left nav becomes wider
// $break-infinite: new-breakpoint(min-width 1180px 24);                   // 960 + nav size

$break-nav-mobile: new-breakpoint(max-width 479px);                      // mobile nav
$break-nav-thin: new-breakpoint(min-width 480px max-width 767px);       // thin side nav (60px)
$break-nav-wide: new-breakpoint(min-width 767px);                      // in-betweener for content modification only
$break-nav-full: new-breakpoint(min-width 980px);                       // wide side nav (120px) 
$break-nav-thin-atleast: new-breakpoint(min-width 480px);       // thin side nav (60px)
$break-nav-wide-atleast: new-breakpoint(min-width 767px);       // thin side nav (60px)

// $break-nav-full-max: new-breakpoint(max-width 980px 24);

// used in non-mobile. fixed
$width-nav-menu: 180px;

@mixin show($size){
   display: none !important;
   @include media($size) {display: block !important; }
}

// These can be used in the HTML doc, but it's preferred 
// that display styles are kept in the CSS
.show-nav-mobile {@include show($break-nav-mobile);} 
.show-nav-thin {@include show($break-nav-thin);} 
.show-nav-thin-atleast {@include show($break-nav-thin-atleast);} 
.show-nav-full {@include show($break-nav-thin-atleast);} 

.show-nav-small {
   display: none !important;
   @include media($break-nav-mobile) {display: block !important; }
   @include media($break-nav-thin) {display: block !important; }
 }

// .show-medium {@include show($medium);} 
// .show-medium-only {@include show($medium-only);} 
// .show-medium-max {@include show($medium-max);} 

// .show-large {@include show($large);} 
// .show-large-only {@include show($large-only);} 
// .show-large-max {@include show($large-max);} 

// .show-largest {@include show($largest);} 

// sets the span for one breakpoint
@mixin span($break, $cols){
   @include media($break) {@include span-columns($cols); }
}

// sets the span for all breakpoints
// @mixin span-all($sm, $md, $mdlg, $lg){
//    @include media($small){@include span-columns($sm); }
//    @include media($medium){@include span-columns($md); }
//    @include media($large){@include span-columns($mdlg); }
//    @include media($largest){@include span-columns($lg); }
// }

@mixin span-three($sm, $md, $mdlg){
   @include media($break-nav-mobile) {@include span-columns($sm); }
   @include media($break-nav-thin) {@include span-columns($md); }
   @include media($break-nav-full) {@include span-columns($mdlg); }
}

@mixin span-four($sm, $md, $mdlg, $lg){
   @include media($break-nav-mobile) {@include span-columns($sm); }
   @include media($break-nav-thin) {@include span-columns($md); }
   @include media($break-nav-wide) {@include span-columns($mdlg); }
   @include media($break-nav-full) {@include span-columns($lg); }
}




// *********************************************************
// SETUP
// *********************************************************

// uses neat.bourbon to create a column container

// from proto-grid-settings

// 0 	=> 480: 6
// 481 	=> 767: 8
// 768  => 979: 12
// 980  => inf: 12 
.container { @include outer-container; }
// .row { @include span-all(6, 8, 12, 12); }


// *********************************************************
// Floater
// *********************************************************

// A Floater class allows its contents to float above other content
// Useful for floating medfgus and sections
.floater {position: fixed; width: 100%; z-index: 99999;}


// *********************************************************
// pwToggle
// *********************************************************

// clicking on a pw-toggle element allows a target to be shown using the following code
// CSS should be appropriately hiding content. This makes the content visible
.pw-toggle-visible{
   // height: 100% !important;
   display: block !important;
}

// the button can be set to "active" state with the following styles
.pw-toggle-active{
   .menu {
      fill: white; //SVG fill for menu buttons
   }
}



@mixin background-opacity($color, $opacity: 0.3) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}

@mixin ease($speed){
    -webkit-transition: all $speed ease;
    -moz-transition: all $speed ease;
    -ms-transition: all $speed ease;
    -o-transition: all $speed ease;
    transition: all $speed ease;
}

@mixin ease-out($speed){
    -webkit-transition: all $speed ease-out 0;
    -moz-transition: all $speed ease-out 0;
    -ms-transition: all $speed ease-out 0;
    -o-transition: all $speed ease-out 0;
    transition: all $speed ease-out 0;
}






// *********************************************************
// FlexBox Helpers
// *********************************************************

// div.parent {
//   @include display-box;
//   @include box-align(start);
//   @include box-orient(horizontal);
//   @include box-pack(start);
// }

// div.parent > div.child {
//   @include box-flex(2);
// }

// // Alternative custom shorthand mixin.
// div.parent {
//   @include box($orient: horizontal, $pack: center, $align: stretch); // defaults
//   @include box(vertical, start, stretch);
// }
%flex-box-center {
	display: -webkit-flex; display: flex; -webkit-flex-direction: column; flex-direction: column; align-items: center;
}



